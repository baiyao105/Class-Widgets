现在需要完成ci build工作流的重构合并工作将 build.yml,build_pyinstall.yml,build_macos.yml 合并
新的工作流可以被以下方式触发:
标签推送 (push with tags: v*)：当有以 v 开头的标签被推送到仓库时触发
手动触发(workflow_dispatch): 需要选择是否发布->提供发布版本号
pr触发(非发布版本)
*非标签推送或手动触发发布版本=debug版本
*标签推送或手动触发发布版本=release版本

Jobs:
1.check: 
 使用py_compile检查所有python文件(windows-latest, macOS-latest, ubuntu-latest)
 若不成功就终止构建,将原因写入GITHUB_STEP_SUMMARY
2.build(matrix)-需要check成功:
 os: [windows-latest, macOS-latest, ubuntu-latest]
 python-version: 3.8
 编译(pyinstaller): windows-x64 windows-x86 macos-15(x64) macos-15(arm64) debian(ubuntu)
 *使用uv+缓存加速
3.sign-需要build成功,并且为标签推送或手动触发发布
 使用signpath对文件进行签名
4.package-不需要sign成功,需要sign(优先)或build(若sign被skip)给出了文件
 打包(zip):
  - 打包windows-x64版本: debug版本:-Windows-x64_debug-{runid}, release版本:ClassWidgets-Windows-x64
  - 打包windows-x86版本: debug版本:Windows-x86_debug-{runid}, release版本:ClassWidgets-Windows-x86
  - 打包macos-15(x64)版本: debug版本:macOS(x64)_debug-{runid}, release版本:ClassWidgets-macOS-x64
  - 打包macos-15(arm64)版本: debug版本:macOS(arm64)_debug-{runid}, release版本:ClassWidgets-macOS-arm64
  - 打包debian(ubuntu)版本: debug版本:Debian10_debug-{runid}, release版本:ClassWidgets-Debian10
  - 将文件属性(md5,大小,文件名)写入GITHUB_STEP_SUMMARY
5.上传package的内容到清单
6.release-需要sign成功后,并且为标签推送或手动触发发布
 调用release.yml进行发布版本
