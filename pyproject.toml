[dependency-groups]
dev = [
  "mypy>=1.14.1",
  "pre-commit>=3.5.0",
  "pylint>=3.2.7",
  "pyqt5-stubs~=5.15.6.0",
  "pyright>=1.1.405",
  "ruff>=0.13.2"
]
package = ["pyinstaller>=6.16.0"]

[project]
dependencies = [
  "configparser~=7.1.0",
  "darkdetect==0.8.0",
  "distro~=1.9.0; sys_platform == 'linux'",
  "edge-tts~=7.2.3",
  "loguru~=0.7.2",
  "ntplib~=0.4.0",
  "packaging>=25.0",
  "psutil~=7.1.0",
  "pycses",
  "pycparser==2.14; sys_platform == 'linux'",
  "pycparser",
  "pydantic~=2.10.6",
  "pygame~=2.6.1",
  "pygetwindow~=0.0.9",
  "pyqt-fluent-widgets~=1.9.0",
  "pyqt5-qt5==5.15.2; sys_platform == 'win32'",
  "pyqt5-qt5",
  "pyqt5~=5.15.11",
  "python-dateutil~=2.9.0",
  "pyttsx3~=2.99",
  "pytz~=2025.2",
  "requests~=2.32.4"
]
description = ""
name = "class_widgets"
readme = "README.md"
requires-python = ">=3.8"
version = "0.1.0"

[tool.pyright]
"autoImportCompletions" = true
"exclude" = [
  "**/.venv",
  "**/__pycache__",
  "**/node_modules",
  "**/venv",
  "build",
  "dist"
]
"include" = ["**/*.py"]
"pythonPlatform" = "All"
"pythonVersion" = "3.8"
"reportArgumentType" = "warning"
"reportAssertAlwaysTrue" = "information"
"reportAttributeAccessIssue" = "information"
"reportConstantRedefinition" = "warning"
"reportDuplicateImport" = "warning"
"reportGeneralTypeIssues" = "warning"
"reportImplicitStringConcatenation" = "information"
"reportImportCycles" = "warning"
"reportIncompatibleMethodOverride" = "warning"
"reportIncompatibleVariableOverride" = "warning"
"reportMissingImports" = "warning"
"reportMissingParameterType" = "information"
"reportMissingTypeStubs" = "information"
"reportOptionalCall" = "information"
"reportOptionalContextManager" = "information"
"reportOptionalIterable" = "information"
"reportOptionalMemberAccess" = "information"
"reportOptionalOperand" = "information"
"reportOptionalSubscript" = "information"
"reportOverlappingOverload" = "warning"
"reportPrivateUsage" = "information"
"reportSelfClsParameterName" = "information"
"reportUnnecessaryCast" = "information"
"reportUnnecessaryIsInstance" = "information"
"reportUntypedBaseClass" = "information"
"reportUntypedClassDecorator" = "information"
"reportUntypedFunctionDecorator" = "information"
"reportUntypedNamedTuple" = "information"
"reportUnusedClass" = "information"
"reportUnusedFunction" = "information"
"reportUnusedImport" = "information"
"reportUnusedVariable" = "information"
"strictDictionaryInference" = false
"strictListInference" = false
"strictSetInference" = false
"typeCheckingMode" = "basic"
"useLibraryCodeForTypes" = true

[[tool.pyright.executionEnvironments]]
"extraPaths" = [".", "./config", "./ui", "./view"]
"pythonPlatform" = "All"
"pythonVersion" = "3.8"
"root" = "."

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "preserve"
skip-magic-trailing-comma = false

[tool.ruff.lint]
ignore = [
  "ARG002",
  "B008",
  "C901",
  "E203",
  "E402",
  "E501",
  "ERA001",
  "F841",
  "N801",
  "N802",
  "N815",
  "N999",
  "PLC0415",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "PTH123"
]
select = [
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "E", # pycodestyle errors
  "ERA", # eradicate
  "F", # pyflakes
  "I", # isort
  "N", # pep8-naming
  "PIE", # flake8-pie
  "PL", # pylint
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "UP", # pyupgrade
  "W" # pycodestyle warnings
]

[tool.ruff.lint.per-file-ignores]
"**/migrations/*" = ["E501"]
"__init__.py" = ["F401"]

[tool.tomlsort.overrides."project.dependencies"]
inline_arrays = false

[tool.uv.sources]
pycses = {git = "https://github.com/SmartTeachCN/pycses.git"}
